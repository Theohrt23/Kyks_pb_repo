---
- hosts: all
  become: true

  vars:
    mysql_root_password: train

  tasks:
    - name: Install required dependencies for the Sury repository
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Get the Debian distribution codename
      ansible.builtin.shell: "lsb_release -sc"
      register: debian_codename

    - name: Add the Sury GPG key
      ansible.builtin.apt_key:
        url: https://packages.sury.org/php/apt.gpg
        state: present

    - name: Add the Sury repository
      ansible.builtin.apt_repository:
        repo: "deb https://packages.sury.org/php/ {{ debian_codename.stdout }} main"
        state: present
        update_cache: yes

    - name: Install PHP and additional modules
      apt:
        name:
          - php8.2
          - php8.2-fpm
          - php8.2-mbstring
          - php8.2-mysql
          - php8.2-curl
          - php8.2-intl
          - php8.2-gd
          - php8.2-opcache
          - php8.2-xml
          - php8.2-zip
        state: present

    - name: Install repositories
      apt:
        name:
          - ca-certificates
          - apt-transport-https
          - software-properties-common
          - wget
          - curl
          - lsb-release
          - git
          - unzip
          - zip
          - python3
          - python3-pip
          - python3-pymysql
        state: latest
        update_cache: yes

    - name: Install MariaDB
      apt:
        name: mariadb-server
        state: latest

    - name: Start MariaDB service
      service:
        name: mariadb
        enabled: true
        state: started

    - name: Create MariaDB user
      mysql_user:
        check_implicit_admin: true
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: dino
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL"
        state: present

    - name: Create MariaDB database
      mysql_db:
        login_user: dino
        login_password: "{{ mysql_root_password }}"
        name: kyks
        state: present

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Install Git
      apt:
        name: git
        state: present

    - name: Clone Git repository
      git:
        repo: https://github.com/Theohrt23/Kyks_pb_repo
        dest: /var/www/kyks
        version: main

    - name: Configure Nginx
      template:
        src: ./templates/nginx.conf.j2
        dest: /etc/nginx/sites-available/kyks
      notify: restart nginx

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/kyks
        dest: /etc/nginx/sites-enabled/kyks
        state: link
      notify: restart nginx

    - name: Install Composer
      ansible.builtin.shell: "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
      args:
        creates: /usr/local/bin/composer

    - name: Install Symfony dependencies with Composer
      ansible.builtin.command:
        cmd: composer install --no-interaction --optimize-autoloader
        chdir: /var/www/kyks/kyks
      environment:
        COMPOSER_ALLOW_SUPERUSER: 1

    - name: Configure Symfony parameters
      template:
        src: ./templates/parameters.yaml.j2
        dest: /var/www/kyks/kyks/config/packages/parameters.yaml

  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted